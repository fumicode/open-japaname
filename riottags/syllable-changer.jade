syllable-changer
  div.syllableChanger__cover(class="{opened ? 'syllableChanger__cover--visible':''}" onclick="{hide}")
  div.syllableChanger(if="{opened}" style="top:{y}px"  onclick="{OKPushed}")
    p.syllableChanger__sentence Change syllable separation?
    ul
      li(each="{syllable in syllable_path}") {syllable.romaji}
        span(each="{kanji in syllable.atejis.slice(0,3)}") {kanji.kanji}
    div.syllableChanger__buttonsContainer
      button.syllableChanger__changeButton(
        onclick="{OKPushed}") OK
      button.syllableChanger__cancelButton(
        onclick="{hide}") Cancel

  script.
    var this_tag = this;
    this.from_syllable = opts.from_syllable;
    this.syllable_path = opts.syllable_path;
    this.opened = false;
    this.onOK = opts.onOK;
    this.x = 0;
    this.y = 0;

    this.on("update",function(){
    /*
      if(this.opened){
        this.addBodyEvent();
      }
      else{
        this.removeBodyEvent();
      }
      */

    });

    /*
    this.addBodyEvent = function(){
      var body = document.getElementsByTagName("body")[0];
      body.addEventListener("click",this_tag.bodyEventListener)

    }

    this.removeBodyEvent = function(){
      var body = document.getElementsByTagName("body")[0];
      body.removeEventListener("click",this_tag.bodyEventListener)
    }

    this.bodyEventListener = function(){
      this_tag.update({opened:false});
    }
    */



    hide(e){
      this.opened=false;
      e.stopPropagation();
    }

    OKPushed(e){
      if(this.onOK && typeof this.onOK ==="function"){
        this.onOK(this.syllable_path);
      }

      e.stopPropagation();
    }



